{"ast":null,"code":"export const get = url => new Promise((resolve, reject) => {\n  fetch(url, {\n    headers: {\n      'Authorization': 'Token ' + (localStorage.token !== undefined ? localStorage.token : '')\n    }\n  }).then(response => response.json()).then(json => resolve(json)).catch();\n});\n\nconst apiCall = (url, method, body, resolve, reject) => fetch(url, {\n  method: method,\n  headers: {\n    'Content-Type': 'application/json; charset=utf-8' //   'Authorization': 'Token ' + localStorage.token !== undefined ? localStorage.token : ''\n\n  },\n  body: JSON.stringify(body)\n}).then(response => {\n  response.json().then(json => resolve(json));\n}).catch(error => console.error(error));\n\nexport const post = (url, body) => new Promise((resolve, reject) => apiCall(url, 'POST', body, resolve, reject));","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/react/movies/src/api_helper/api.js"],"names":["get","url","Promise","resolve","reject","fetch","headers","localStorage","token","undefined","then","response","json","catch","apiCall","method","body","JSON","stringify","error","console","post"],"mappings":"AAAA,OAAO,MAAMA,GAAG,GAAIC,GAAD,IACjB,IAAIC,OAAJ,CACE,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACnBC,EAAAA,KAAK,CAACJ,GAAD,EAAM;AACTK,IAAAA,OAAO,EAAE;AACP,uBAAiB,YAAYC,YAAY,CAACC,KAAb,KAAuBC,SAAvB,GAAmCF,YAAY,CAACC,KAAhD,GAAwD,EAApE;AADV;AADA,GAAN,CAAL,CAKGE,IALH,CAKQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALpB,EAMGF,IANH,CAMQE,IAAI,IAAIT,OAAO,CAACS,IAAD,CANvB,EAM+BC,KAN/B;AAOD,CATH,CADK;;AAaP,MAAMC,OAAO,GAAG,CAACb,GAAD,EAAMc,MAAN,EAAcC,IAAd,EAAoBb,OAApB,EAA6BC,MAA7B,KACdC,KAAK,CAACJ,GAAD,EAAM;AACTc,EAAAA,MAAM,EAAEA,MADC;AAETT,EAAAA,OAAO,EAAE;AACH,oBAAgB,iCADb,CAEL;;AAFK,GAFA;AAMPU,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AANC,CAAN,CAAL,CAOGN,IAPH,CAOQC,QAAQ,IAAI;AAChBA,EAAAA,QAAQ,CAACC,IAAT,GACCF,IADD,CACME,IAAI,IAAIT,OAAO,CAACS,IAAD,CADrB;AAEH,CAVD,EAUGC,KAVH,CAUUM,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAVnB,CADF;;AAaE,OAAO,MAAME,IAAI,GAAG,CAACpB,GAAD,EAAMe,IAAN,KAClB,IAAId,OAAJ,CACI,CAACC,OAAD,EAAUC,MAAV,KAAqBU,OAAO,CAACb,GAAD,EAAM,MAAN,EAAce,IAAd,EAAoBb,OAApB,EAA6BC,MAA7B,CADhC,CADK","sourcesContent":["export const get = (url) =>\n  new Promise(\n    (resolve, reject) => {\n      fetch(url, {\n        headers: {\n          'Authorization': 'Token ' + (localStorage.token !== undefined ? localStorage.token : '')\n        }\n      })\n        .then(response => response.json())\n        .then(json => resolve(json)).catch()\n    }\n  )\n\nconst apiCall = (url, method, body, resolve, reject) =>\n  fetch(url, {\n    method: method,\n    headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n        //   'Authorization': 'Token ' + localStorage.token !== undefined ? localStorage.token : ''\n      },\n      body: JSON.stringify(body)\n  }).then(response => {\n      response.json()\n      .then(json => resolve(json))\n  }).catch( error => console.error(error))\n\n  export const post = (url, body) =>\n    new Promise(\n        (resolve, reject) => apiCall(url, 'POST', body, resolve, reject)\n    )\n"]},"metadata":{},"sourceType":"module"}