{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/react/movies/src/components/MovieList.js\";\nimport React, { Component } from 'react';\nimport MovieItem from './MovieItem.js';\nimport FavItem from './FavItem.js';\nimport { movieByTitleYearApiUrl, favMovie } from '../api_helper/routes';\nimport * as api from '../api_helper/api';\nimport styled from 'styled-components';\nconst Container = styled.div`\n  background: #2b2e39;\n  margin: 0 auto;\n  width: 80%;\n  max-width: 600px;\n  padding: 14px;\n  border-radius: 14px;\n  margin-top: 14px;\n`;\nconst Header = styled.h1`\n  color: #fff;\n`;\nconst TextInput = styled.input`\n  padding: 5px;\n  font-size: .7em;\n  background: #232632;\n  color: #d3d4d6;\n  width: 100%;\n  margin-right: 7px;\n  border: 0px;\n  -webkit-apperance: none;\n`;\nconst Button = styled.button`\n  background: #232632;\n  color: #00a7fa;\n  width: 30%;\n  height: 32px;\n  font-size: 0.9em;\n  border: 2px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n  margin-left: 10px;\n  justify-content: center;\n  align-items: center;\n  &:hover { background: #555; } \n`;\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.clearList = this.clearList.bind(this);\n    this.updateTitle = this.updateTitle.bind(this);\n    this.updateYear = this.updateYear.bind(this);\n    this.getMovies = this.getMovies.bind(this);\n    this.refreshMovies = this.refreshMovies.bind(this);\n    this.getFav = this.getFav.bind(this);\n    this.onFavChangeCallback = this.onFavChangeCallback.bind(this);\n    this.state = {\n      movies: [],\n      fav_movies: [],\n      draftTitle: '',\n      draftYear: ''\n    };\n  }\n\n  updateTitle(event) {\n    this.setState({\n      draftTitle: event.target.value\n    });\n  }\n\n  updateYear(event) {\n    this.setState({\n      draftYear: event.target.value\n    });\n  }\n\n  async refreshMovies(url) {\n    this.setState({\n      movies: []\n    });\n    const data = await api.get(url);\n    this.setState({\n      movies: data\n    });\n  }\n\n  async getMovies() {\n    const title = this.state.draftTitle;\n    const year = this.state.draftYear;\n    this.clearList();\n    const data = await api.get(movieByTitleYearApiUrl(title, year));\n    this.setState({\n      movies: data,\n      draftTitle: '',\n      draftYear: ''\n    });\n  }\n\n  async getFav() {\n    this.clearList();\n    const data = await api.get(favMovie());\n    this.setState({\n      fav_movies: data\n    });\n  }\n\n  clearList() {\n    this.setState({\n      movies: [],\n      fav_movies: []\n    });\n  }\n\n  onFavChangeCallback(fav) {\n    const fav_movies = this.state.fav_movies;\n    console.log(fav);\n    console.log(fav_movies);\n    const updated_fav = fav_movies.filter(function (value, index, arr) {\n      return value !== fav;\n    });\n    console.log(updated_fav);\n    this.setState({\n      fav_movies: updated_fav\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          movies = _this$state.movies,\n          fav_movies = _this$state.fav_movies;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Movie list from omdbapi\"), React.createElement(\"label\", {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      type: \"text\",\n      name: \"Title\",\n      id: \"title\",\n      value: this.state.draftTitle,\n      onChange: this.updateTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Year\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      type: \"text\",\n      name: \"Year\",\n      id: \"year\",\n      value: this.state.draftYear,\n      onChange: this.updateYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.getMovies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"request movies\"), React.createElement(Button, {\n      onClick: this.clearList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Clear list\"), React.createElement(Button, {\n      onClick: this.getFav,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Favorites\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), movies.results !== undefined && movies.results.length !== 0 ? movies.results.map(item => React.createElement(MovieItem, {\n      title: item.Title,\n      type: item.Type,\n      year: item.Year,\n      imdbID: item.imdbID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })) : '', fav_movies !== undefined && fav_movies.length !== 0 ? fav_movies.map(item => React.createElement(FavItem, {\n      fav: item,\n      favChangeCallback: this.onFavChangeCallback,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })) : '', movies.previous !== undefined && movies.previous !== null && React.createElement(Button, {\n      onClick: () => {\n        this.refreshMovies(movies.previous);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Previous\"), movies.next !== undefined && movies.next !== null && React.createElement(Button, {\n      onClick: () => {\n        this.refreshMovies(movies.next);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Next\"));\n  }\n\n}\n\nMovieList.defaultProps = {\n  movies: []\n};\nexport default MovieList;","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/react/movies/src/components/MovieList.js"],"names":["React","Component","MovieItem","FavItem","movieByTitleYearApiUrl","favMovie","api","styled","Container","div","Header","h1","TextInput","input","Button","button","MovieList","constructor","props","clearList","bind","updateTitle","updateYear","getMovies","refreshMovies","getFav","onFavChangeCallback","state","movies","fav_movies","draftTitle","draftYear","event","setState","target","value","url","data","get","title","year","fav","console","log","updated_fav","filter","index","arr","render","results","undefined","length","map","item","Title","Type","Year","imdbID","previous","next","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport MovieItem from './MovieItem.js'\nimport FavItem from './FavItem.js'\nimport { movieByTitleYearApiUrl, favMovie } from '../api_helper/routes'\nimport * as api from '../api_helper/api'\n\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  background: #2b2e39;\n  margin: 0 auto;\n  width: 80%;\n  max-width: 600px;\n  padding: 14px;\n  border-radius: 14px;\n  margin-top: 14px;\n`\n\nconst Header = styled.h1`\n  color: #fff;\n`\n\nconst TextInput = styled.input`\n  padding: 5px;\n  font-size: .7em;\n  background: #232632;\n  color: #d3d4d6;\n  width: 100%;\n  margin-right: 7px;\n  border: 0px;\n  -webkit-apperance: none;\n`\n\nconst Button = styled.button`\n  background: #232632;\n  color: #00a7fa;\n  width: 30%;\n  height: 32px;\n  font-size: 0.9em;\n  border: 2px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n  margin-left: 10px;\n  justify-content: center;\n  align-items: center;\n  &:hover { background: #555; } \n`\n\nclass MovieList extends Component {\n  static defaultProps = {\n      movies: [],\n  }\n  constructor (props) {\n    super(props)\n    this.clearList = this.clearList.bind(this)\n    this.updateTitle = this.updateTitle.bind(this)\n    this.updateYear = this.updateYear.bind(this)\n    this.getMovies = this.getMovies.bind(this)\n    this.refreshMovies = this.refreshMovies.bind(this)\n    this.getFav = this.getFav.bind(this)\n    this.onFavChangeCallback = this.onFavChangeCallback.bind(this)\n\n    this.state = {\n        movies: [],\n        fav_movies: [],\n        draftTitle: '',\n        draftYear: '',\n    }\n  }\n\n  updateTitle (event) {\n      this.setState({draftTitle: event.target.value})\n  }\n\n  updateYear (event) {\n      this.setState({draftYear: event.target.value})\n  }\n\n  async refreshMovies (url) {\n    this.setState({movies: []})\n    const data = await api.get(url)\n    this.setState({movies: data})\n  }\n\n  async getMovies () {\n    const title = this.state.draftTitle\n    const year = this.state.draftYear\n\n    this.clearList()\n\n    const data = await api.get(movieByTitleYearApiUrl(title, year))\n    this.setState({\n        movies: data,\n        draftTitle: '',\n        draftYear: '',\n    })\n  }\n\n  async getFav () {\n      this.clearList()\n      const data = await api.get(favMovie())\n      this.setState({fav_movies: data})\n  }\n\n  clearList () {\n      this.setState({\n          movies: [],\n          fav_movies: []\n      })\n  }\n\n  onFavChangeCallback (fav) {\n    const { fav_movies } = this.state\n    console.log(fav)\n    console.log(fav_movies)\n    const updated_fav = fav_movies.filter(function(value, index, arr) {\n        return value !== fav;\n    })\n    console.log(updated_fav)\n    this.setState({\n        fav_movies: updated_fav\n    })\n  }\n\n  render () {\n    const { movies, fav_movies } = this.state\n    return (\n      <Container>\n        <Header>Movie list from omdbapi</Header>\n        <label for=\"title\">Title</label><br></br>\n        <TextInput type='text' name=\"Title\" id=\"title\" value={this.state.draftTitle} onChange={this.updateTitle}/><br></br>\n\n        <label for=\"year\">Year</label><br></br>\n        <TextInput type='text' name=\"Year\" id=\"year\" value={this.state.draftYear} onChange={this.updateYear}/><br></br>\n        <Button onClick={this.getMovies}>request movies</Button>\n        <Button onClick={this.clearList}>Clear list</Button>\n        <Button onClick={this.getFav}>Favorites</Button><br></br>\n\n        {movies.results !== undefined && movies.results.length !== 0 ? movies.results.map(item =>\n        <MovieItem\n        title={item.Title}\n        type={item.Type}\n        year={item.Year}\n        imdbID={item.imdbID}/>) : ''\n        }\n\n        {fav_movies !== undefined && fav_movies.length !== 0 ? fav_movies.map(item => \n        <FavItem \n        fav={item}\n        favChangeCallback={this.onFavChangeCallback}\n        />) \n        : ''}\n\n        { movies.previous !==  undefined && movies.previous !== null && <Button onClick={() => {this.refreshMovies(movies.previous)}}>Previous</Button>}\n        { movies.next !==  undefined && movies.next !== null && <Button onClick={() => {this.refreshMovies(movies.next)}}>Next</Button>}\n      </Container>\n    )\n  }\n}\n\nexport default MovieList\n"]},"metadata":{},"sourceType":"module"}