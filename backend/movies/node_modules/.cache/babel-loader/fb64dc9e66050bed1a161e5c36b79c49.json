{"ast":null,"code":"export const get = url => new Promise((resolve, reject) => {\n  fetch(url).then(response => response.json()).then(json => resolve(json)).catch();\n});\n\nconst apiCall = (url, method, body, resolve, reject) => fetch(url, {\n  method: method,\n  headers: {\n    'Content-Type': 'application/json; charset=utf-8'\n  },\n  body: JSON.stringify(body)\n}).then(response => {\n  response.json().then(json => resolve(json));\n}).catch(error => console.error(error));\n\nexport const post = (url, body) => new Promise((resolve, reject) => apiCall(url, 'POST', body, resolve, reject));","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/react/movies/src/api_helper/api.js"],"names":["get","url","Promise","resolve","reject","fetch","then","response","json","catch","apiCall","method","body","headers","JSON","stringify","error","console","post"],"mappings":"AAAA,OAAO,MAAMA,GAAG,GAAGC,GAAG,IACpB,IAAIC,OAAJ,CACE,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACjBC,EAAAA,KAAK,CAACJ,GAAD,CAAL,CACCK,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAIL,OAAO,CAACK,IAAD,CAFrB,EAE6BC,KAF7B;AAGH,CALH,CADK;;AASP,MAAMC,OAAO,GAAG,CAACT,GAAD,EAAMU,MAAN,EAAcC,IAAd,EAAoBT,OAApB,EAA6BC,MAA7B,KACdC,KAAK,CAACJ,GAAD,EAAM;AACTU,EAAAA,MAAM,EAAEA,MADC;AAETE,EAAAA,OAAO,EAAE;AACH,oBAAgB;AADb,GAFA;AAKPD,EAAAA,IAAI,EAAEE,IAAI,CAACC,SAAL,CAAeH,IAAf;AALC,CAAN,CAAL,CAMGN,IANH,CAMQC,QAAQ,IAAI;AAChBA,EAAAA,QAAQ,CAACC,IAAT,GACCF,IADD,CACME,IAAI,IAAIL,OAAO,CAACK,IAAD,CADrB;AAEH,CATD,EASGC,KATH,CASUO,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CATnB,CADF;;AAYE,OAAO,MAAME,IAAI,GAAG,CAACjB,GAAD,EAAMW,IAAN,KAClB,IAAIV,OAAJ,CACI,CAACC,OAAD,EAAUC,MAAV,KAAqBM,OAAO,CAACT,GAAD,EAAM,MAAN,EAAcW,IAAd,EAAoBT,OAApB,EAA6BC,MAA7B,CADhC,CADK","sourcesContent":["export const get = url =>\n  new Promise(\n    (resolve, reject) => {\n        fetch(url)\n        .then(response => response.json())\n        .then(json => resolve(json)).catch()\n    }\n  )\n\nconst apiCall = (url, method, body, resolve, reject) =>\n  fetch(url, {\n    method: method,\n    headers: {\n          'Content-Type': 'application/json; charset=utf-8'\n      },\n      body: JSON.stringify(body)\n  }).then(response => {\n      response.json()\n      .then(json => resolve(json))\n  }).catch( error => console.error(error))\n\n  export const post = (url, body) =>\n    new Promise(\n        (resolve, reject) => apiCall(url, 'POST', body, resolve, reject)\n    )\n"]},"metadata":{},"sourceType":"module"}