{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/react/movies/src/components/MovieList.js\";\nimport React, { Component } from 'react';\nimport MovieItem from './MovieItem.js';\nimport movie_json from '../fake_json/m_list.json';\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.clearList = this.clearList.bind(this);\n    this.state = {\n      movies: []\n    };\n  }\n\n  clearList() {\n    this.setState({\n      movies: []\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://127.0.0.1:8000/api/v1/movies/?title=batman&year=2005').then(response => response.json()).then(json => this.setState({\n      movies: json\n    }));\n  }\n\n  render() {\n    const movies = this.state.movies;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Movie list from omdbapi\"), React.createElement(\"button\", {\n      onClick: this.clearList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Clear list\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Refresh list\"), movies.results !== undefined ? movies.results.map(item => React.createElement(MovieItem, {\n      title: item.Title,\n      type: item.Type,\n      year: item.Year,\n      imdbID: item.imdbID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })) : '');\n  }\n\n}\n\nMovieList.defaultProps = {\n  movies: []\n};\nexport default MovieList;","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/react/movies/src/components/MovieList.js"],"names":["React","Component","MovieItem","movie_json","MovieList","constructor","props","clearList","bind","state","movies","setState","componentDidMount","fetch","then","response","json","render","results","undefined","map","item","Title","Type","Year","imdbID","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAIhCI,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGD;;AAEDH,EAAAA,SAAS,GAAI;AACT,SAAKI,QAAL,CAAc;AACVD,MAAAA,MAAM,EAAE;AADE,KAAd;AAGH;;AAEDE,EAAAA,iBAAiB,GAAI;AACjBC,IAAAA,KAAK,CAAC,6DAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAI,KAAKL,QAAL,CAAc;AAACD,MAAAA,MAAM,EAAEM;AAAT,KAAd,CAFd;AAGH;;AAEDC,EAAAA,MAAM,GAAI;AAAA,UACAP,MADA,GACW,KAAKD,KADhB,CACAC,MADA;AAER,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKH,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,EAIGG,MAAM,CAACQ,OAAP,KAAmBC,SAAnB,GAA+BT,MAAM,CAACQ,OAAP,CAAeE,GAAf,CAAmBC,IAAI,IACvD,oBAAC,SAAD;AACA,MAAA,KAAK,EAAEA,IAAI,CAACC,KADZ;AAEA,MAAA,IAAI,EAAED,IAAI,CAACE,IAFX;AAGA,MAAA,IAAI,EAAEF,IAAI,CAACG,IAHX;AAIA,MAAA,MAAM,EAAEH,IAAI,CAACI,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgC,CAA/B,GAK0B,EAT7B,CADF;AAaD;;AAvC+B;;AAA5BrB,S,CACGsB,Y,GAAe;AAClBhB,EAAAA,MAAM,EAAE;AADU,C;AAyCxB,eAAeN,SAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport MovieItem from './MovieItem.js'\nimport movie_json from '../fake_json/m_list.json'\n\nclass MovieList extends Component {\n  static defaultProps = {\n      movies: [],\n  }\n  constructor (props) {\n    super(props)\n    this.clearList = this.clearList.bind(this)\n    this.state = {\n        movies: []\n    }\n  }\n\n  clearList () {\n      this.setState({\n          movies: []\n      })\n  }\n\n  componentDidMount () {\n      fetch('http://127.0.0.1:8000/api/v1/movies/?title=batman&year=2005')\n      .then(response => response.json())\n      .then(json => this.setState({movies: json}))\n  }\n\n  render () {\n    const { movies } = this.state\n    return (\n      <div>\n        <h1>Movie list from omdbapi</h1>\n        <button onClick={this.clearList}>Clear list</button>\n        <button>Refresh list</button>\n        {movies.results !== undefined ? movies.results.map(item =>\n        <MovieItem\n        title={item.Title}\n        type={item.Type}\n        year={item.Year}\n        imdbID={item.imdbID} />) : ''}\n      </div>\n    )\n  }\n}\n\nexport default MovieList\n"]},"metadata":{},"sourceType":"module"}