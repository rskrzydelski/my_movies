{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/react/movies/src/components/MovieList.js\";\nimport React, { Component } from 'react';\nimport MovieItem from './MovieItem.js';\nimport styled from 'styled-components';\nconst Container = styled.div`\n  background: #2b2e39;\n  margin: 0 auto;\n  width: 80%;\n  max-width: 600px;\n  padding: 14px;\n  border-radius: 14px;\n  margin-top: 14px;\n`;\nconst Header = styled.h1`\n  color: #fff;\n`;\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.clearList = this.clearList.bind(this);\n    this.updateDraft = this.updateDraft.bind(this);\n    this.newQuery = this.newQuery.bind(this);\n    this.state = {\n      movies: [],\n      query_string: '',\n      draftTitle: ''\n    };\n  }\n\n  updateDraft(event) {\n    this.setState({\n      draft: event.target.value\n    });\n  }\n\n  newQuery() {\n    const query = this.state.draft;\n    this.setState({\n      query_string: query\n    });\n  }\n\n  clearList() {\n    this.setState({\n      movies: []\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://127.0.0.1:8000/api/v1/movies/?title=batman&year=2005').then(response => response.json()).then(json => this.setState({\n      movies: json\n    }));\n  }\n\n  render() {\n    const movies = this.state.movies;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Movie list from omdbapi\"), React.createElement(\"label\", {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Title\",\n      id: \"title\",\n      onChange: this.updateDraft,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"request movies\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.clearList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Clear list\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), movies.results !== undefined ? movies.results.map(item => React.createElement(MovieItem, {\n      title: item.Title,\n      type: item.Type,\n      year: item.Year,\n      imdbID: item.imdbID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })) : '');\n  }\n\n}\n\nMovieList.defaultProps = {\n  movies: []\n};\nexport default MovieList;","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/react/movies/src/components/MovieList.js"],"names":["React","Component","MovieItem","styled","Container","div","Header","h1","MovieList","constructor","props","clearList","bind","updateDraft","newQuery","state","movies","query_string","draftTitle","event","setState","draft","target","value","query","componentDidMount","fetch","then","response","json","render","results","undefined","map","item","Title","Type","Year","imdbID","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport MovieItem from './MovieItem.js'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  background: #2b2e39;\n  margin: 0 auto;\n  width: 80%;\n  max-width: 600px;\n  padding: 14px;\n  border-radius: 14px;\n  margin-top: 14px;\n`\n\nconst Header = styled.h1`\n  color: #fff;\n`\n\nclass MovieList extends Component {\n  static defaultProps = {\n      movies: [],\n  }\n  constructor (props) {\n    super(props)\n    this.clearList = this.clearList.bind(this)\n    this.updateDraft = this.updateDraft.bind(this)\n    this.newQuery = this.newQuery.bind(this)\n    this.state = {\n        movies: [],\n        query_string: '',\n        draftTitle: ''\n    }\n  }\n\n  updateDraft (event) {\n      this.setState({draft: event.target.value})\n  }\n\n  newQuery () {\n    const query = this.state.draft\n    this.setState({query_string: query})\n  }\n\n  clearList () {\n      this.setState({\n          movies: []\n      })\n  }\n\n  componentDidMount () {\n      fetch('http://127.0.0.1:8000/api/v1/movies/?title=batman&year=2005')\n      .then(response => response.json())\n      .then(json => this.setState({movies: json}))\n  }\n\n  render () {\n    const { movies } = this.state\n    return (\n      <Container>\n        <Header>Movie list from omdbapi</Header>\n        <label for=\"title\">Title</label><br></br>\n        <input type='text' name=\"Title\" id=\"title\" onChange={this.updateDraft}/>\n        <button>request movies</button><br></br>\n        <button onClick={this.clearList}>Clear list</button><br></br>\n        {movies.results !== undefined ? movies.results.map(item =>\n        <MovieItem\n        title={item.Title}\n        type={item.Type}\n        year={item.Year}\n        imdbID={item.imdbID} />) : ''}\n      </Container>\n    )\n  }\n}\n\nexport default MovieList\n"]},"metadata":{},"sourceType":"module"}