{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/react/movies/src/components/MovieList.js\";\nimport React, { Component } from 'react';\nimport MovieItem from './MovieItem.js';\nimport styled from 'styled-components';\nconst Container = styled.div`\n  background: #2b2e39;\n  margin: 0 auto;\n  width: 80%;\n  max-width: 600px;\n  padding: 14px;\n  border-radius: 14px;\n  margin-top: 14px;\n`;\nconst Header = styled.h1`\n  color: #fff;\n`;\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.clearList = this.clearList.bind(this);\n    this.updateTitle = this.updateTitle.bind(this);\n    this.updateYear = this.updateYear.bind(this);\n    this.newQuery = this.newQuery.bind(this);\n    this.state = {\n      movies: [],\n      draftTitle: '',\n      draftYear: ''\n    };\n  }\n\n  updateTitle(event) {\n    this.setState({\n      draftTitle: event.target.value\n    });\n  }\n\n  updateYear(event) {\n    this.setState({\n      draftYear: event.target.value\n    });\n  }\n\n  newQuery() {\n    const title = this.state.draftTitle;\n    const year = this.state.draftYear;\n    let url = 'http://127.0.0.1:8000/api/v1/movies/?';\n    let query = '';\n\n    if (title !== '') {\n      query = 'title=';\n      query += title;\n    }\n\n    if (year !== '') {\n      query !== '' ? query += '&' : query += '';\n      query += 'year=';\n      query += year;\n    }\n\n    url += query;\n    console.log(url); // fetch('http://127.0.0.1:8000/api/v1/movies/?title=batman&year=2005')\n    // .then(response => response.json())\n    // .then(json => this.setState({movies: json}))\n\n    this.setState({\n      draftTitle: '',\n      draftYear: ''\n    });\n  }\n\n  clearList() {\n    this.setState({\n      movies: []\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://127.0.0.1:8000/api/v1/movies/?title=batman&year=2005').then(response => response.json()).then(json => this.setState({\n      movies: json\n    }));\n  }\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate');\n  }\n\n  render() {\n    const movies = this.state.movies;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Movie list from omdbapi\"), React.createElement(\"label\", {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Title\",\n      id: \"title\",\n      value: this.state.draftTitle,\n      onChange: this.updateTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Year\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"Year\",\n      id: \"year\",\n      value: this.state.draftYear,\n      onChange: this.updateYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.newQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"request movies\"), React.createElement(\"button\", {\n      onClick: this.clearList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Clear list\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), movies.results !== undefined ? movies.results.map(item => React.createElement(MovieItem, {\n      title: item.Title,\n      type: item.Type,\n      year: item.Year,\n      imdbID: item.imdbID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })) : '');\n  }\n\n}\n\nMovieList.defaultProps = {\n  movies: []\n};\nexport default MovieList;","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/react/movies/src/components/MovieList.js"],"names":["React","Component","MovieItem","styled","Container","div","Header","h1","MovieList","constructor","props","clearList","bind","updateTitle","updateYear","newQuery","state","movies","draftTitle","draftYear","event","setState","target","value","title","year","url","query","console","log","componentDidMount","fetch","then","response","json","componentDidUpdate","render","results","undefined","map","item","Title","Type","Year","imdbID","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport MovieItem from './MovieItem.js'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  background: #2b2e39;\n  margin: 0 auto;\n  width: 80%;\n  max-width: 600px;\n  padding: 14px;\n  border-radius: 14px;\n  margin-top: 14px;\n`\n\nconst Header = styled.h1`\n  color: #fff;\n`\n\nclass MovieList extends Component {\n  static defaultProps = {\n      movies: [],\n  }\n  constructor (props) {\n    super(props)\n    this.clearList = this.clearList.bind(this)\n    this.updateTitle = this.updateTitle.bind(this)\n    this.updateYear = this.updateYear.bind(this)\n    this.newQuery = this.newQuery.bind(this)\n    this.state = {\n        movies: [],\n        draftTitle: '',\n        draftYear: ''\n    }\n  }\n\n  updateTitle (event) {\n      this.setState({draftTitle: event.target.value})\n  }\n\n  updateYear (event) {\n      this.setState({draftYear: event.target.value})\n  }\n\n  newQuery () {\n    const title = this.state.draftTitle\n    const year = this.state.draftYear\n    let url = 'http://127.0.0.1:8000/api/v1/movies/?'\n    let query = ''\n    if (title !== '') {\n      query = 'title='\n      query += title\n    }\n    if (year !== '') {\n        query !== '' ? query+='&' : query+=''\n        query += 'year='\n        query += year\n    }\n\n    url += query\n    console.log(url)\n    // fetch('http://127.0.0.1:8000/api/v1/movies/?title=batman&year=2005')\n    // .then(response => response.json())\n    // .then(json => this.setState({movies: json}))\n\n    this.setState({\n        draftTitle: '',\n        draftYear: '',\n      })\n  }\n\n  clearList () {\n      this.setState({\n          movies: []\n      })\n  }\n\n  componentDidMount () {\n      fetch('http://127.0.0.1:8000/api/v1/movies/?title=batman&year=2005')\n      .then(response => response.json())\n      .then(json => this.setState({movies: json}))\n  }\n\n  componentDidUpdate () {\n      console.log('componentDidUpdate')\n  }\n\n  render () {\n    const { movies } = this.state\n    return (\n      <Container>\n        <Header>Movie list from omdbapi</Header>\n        <label for=\"title\">Title</label><br></br>\n        <input type='text' name=\"Title\" id=\"title\" value={this.state.draftTitle} onChange={this.updateTitle}/><br></br>\n\n        <label for=\"year\">Year</label><br></br>\n        <input type='text' name=\"Year\" id=\"year\" value={this.state.draftYear} onChange={this.updateYear}/><br></br>\n        <button onClick={this.newQuery}>request movies</button>\n\n        <button onClick={this.clearList}>Clear list</button><br></br>\n        {movies.results !== undefined ? movies.results.map(item =>\n        <MovieItem\n        title={item.Title}\n        type={item.Type}\n        year={item.Year}\n        imdbID={item.imdbID} />) : ''}\n      </Container>\n    )\n  }\n}\n\nexport default MovieList\n"]},"metadata":{},"sourceType":"module"}