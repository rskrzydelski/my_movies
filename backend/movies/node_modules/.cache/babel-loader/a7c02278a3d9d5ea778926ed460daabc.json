{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/react/movies/src/components/MovieList.js\";\nimport React, { Component } from 'react';\nimport MovieItem from './MovieItem.js';\nimport { movieByTitleYearApiUrl } from '../api_helper/routes';\nimport * as api from '../api_helper/api';\nimport styled from 'styled-components';\nconst Container = styled.div`\n  background: #2b2e39;\n  margin: 0 auto;\n  width: 80%;\n  max-width: 600px;\n  padding: 14px;\n  border-radius: 14px;\n  margin-top: 14px;\n`;\nconst Header = styled.h1`\n  color: #fff;\n`;\nconst TextInput = styled.input`\n  padding: 5px;\n  font-size: .7em;\n  background: #232632;\n  color: #d3d4d6;\n  width: 100%;\n  margin-right: 7px;\n  border: 0px;\n  -webkit-apperance: none;\n`;\nconst Button = styled.button`\n  background: #232632;\n  color: #00a7fa;\n  width: 31%;\n  height: 32px;\n  font-size: 0.9em;\n  border: 2px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n  justify-content: center;\n  align-items: center;\n  &:hover { background: #555; } \n`;\n\nclass MovieList extends Component {\n  constructor(props) {\n    super(props);\n    this.clearList = this.clearList.bind(this);\n    this.updateTitle = this.updateTitle.bind(this);\n    this.updateYear = this.updateYear.bind(this);\n    this.getMovies = this.getMovies.bind(this);\n    this.refreshMovies = this.refreshMovies.bind(this);\n    this.state = {\n      movies: [],\n      draftTitle: '',\n      draftYear: ''\n    };\n  }\n\n  updateTitle(event) {\n    this.setState({\n      draftTitle: event.target.value\n    });\n  }\n\n  updateYear(event) {\n    this.setState({\n      draftYear: event.target.value\n    });\n  }\n\n  async refreshMovies(url) {\n    this.setState({\n      movies: []\n    });\n    const data = await api.get(url);\n    this.setState({\n      movies: data\n    });\n  }\n\n  async getMovies() {\n    const title = this.state.draftTitle;\n    const year = this.state.draftYear;\n    this.setState({\n      movies: []\n    });\n    const data = await api.get(movieByTitleYearApiUrl(title, year));\n    this.setState({\n      movies: data,\n      draftTitle: '',\n      draftYear: ''\n    });\n  }\n\n  clearList() {\n    this.setState({\n      movies: []\n    });\n  }\n\n  render() {\n    const movies = this.state.movies;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Movie list from omdbapi\"), React.createElement(\"label\", {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      type: \"text\",\n      name: \"Title\",\n      id: \"title\",\n      value: this.state.draftTitle,\n      onChange: this.updateTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Year\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      type: \"text\",\n      name: \"Year\",\n      id: \"year\",\n      value: this.state.draftYear,\n      onChange: this.updateYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.getMovies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"request movies\"), React.createElement(Button, {\n      onClick: this.clearList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Clear list\"), React.createElement(Button, {\n      onClick: this.clearList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Favorites\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), movies.results !== undefined ? movies.results.map(item => React.createElement(MovieItem, {\n      title: item.Title,\n      type: item.Type,\n      year: item.Year,\n      imdbID: item.imdbID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })) : '', movies.previous !== undefined && movies.previous !== null && React.createElement(Button, {\n      onClick: () => {\n        this.refreshMovies(movies.previous);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Previous\"), movies.next !== undefined && movies.next !== null && React.createElement(Button, {\n      onClick: () => {\n        this.refreshMovies(movies.next);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Next\"));\n  }\n\n}\n\nMovieList.defaultProps = {\n  movies: []\n};\nexport default MovieList;","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/react/movies/src/components/MovieList.js"],"names":["React","Component","MovieItem","movieByTitleYearApiUrl","api","styled","Container","div","Header","h1","TextInput","input","Button","button","MovieList","constructor","props","clearList","bind","updateTitle","updateYear","getMovies","refreshMovies","state","movies","draftTitle","draftYear","event","setState","target","value","url","data","get","title","year","render","results","undefined","map","item","Title","Type","Year","imdbID","previous","next","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,sBAAT,QAAuC,sBAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,mBAArB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;;;;;;;;CAA7B;AAUA,MAAMC,MAAM,GAAGH,MAAM,CAACI,EAAG;;CAAzB;AAIA,MAAMC,SAAS,GAAGL,MAAM,CAACM,KAAM;;;;;;;;;CAA/B;AAWA,MAAMC,MAAM,GAAGP,MAAM,CAACQ,MAAO;;;;;;;;;;;;;CAA7B;;AAeA,MAAMC,SAAN,SAAwBb,SAAxB,CAAkC;AAIhCc,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,SAAL,GAAiB,KAAKA,SAAL,CAAeH,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKI,aAAL,GAAqB,KAAKA,aAAL,CAAmBJ,IAAnB,CAAwB,IAAxB,CAArB;AAEA,SAAKK,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,UAAU,EAAE,EAFH;AAGTC,MAAAA,SAAS,EAAE;AAHF,KAAb;AAKD;;AAEDP,EAAAA,WAAW,CAAEQ,KAAF,EAAS;AAChB,SAAKC,QAAL,CAAc;AAACH,MAAAA,UAAU,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAA1B,KAAd;AACH;;AAEDV,EAAAA,UAAU,CAAEO,KAAF,EAAS;AACf,SAAKC,QAAL,CAAc;AAACF,MAAAA,SAAS,EAAEC,KAAK,CAACE,MAAN,CAAaC;AAAzB,KAAd;AACH;;AAED,QAAMR,aAAN,CAAqBS,GAArB,EAA0B;AACxB,SAAKH,QAAL,CAAc;AAACJ,MAAAA,MAAM,EAAE;AAAT,KAAd;AACA,UAAMQ,IAAI,GAAG,MAAM5B,GAAG,CAAC6B,GAAJ,CAAQF,GAAR,CAAnB;AACA,SAAKH,QAAL,CAAc;AAACJ,MAAAA,MAAM,EAAEQ;AAAT,KAAd;AACD;;AAED,QAAMX,SAAN,GAAmB;AACjB,UAAMa,KAAK,GAAG,KAAKX,KAAL,CAAWE,UAAzB;AACA,UAAMU,IAAI,GAAG,KAAKZ,KAAL,CAAWG,SAAxB;AAEA,SAAKE,QAAL,CAAc;AAACJ,MAAAA,MAAM,EAAE;AAAT,KAAd;AAEA,UAAMQ,IAAI,GAAG,MAAM5B,GAAG,CAAC6B,GAAJ,CAAQ9B,sBAAsB,CAAC+B,KAAD,EAAQC,IAAR,CAA9B,CAAnB;AACA,SAAKP,QAAL,CAAc;AACVJ,MAAAA,MAAM,EAAEQ,IADE;AAEVP,MAAAA,UAAU,EAAE,EAFF;AAGVC,MAAAA,SAAS,EAAE;AAHD,KAAd;AAKD;;AAEDT,EAAAA,SAAS,GAAI;AACT,SAAKW,QAAL,CAAc;AACVJ,MAAAA,MAAM,EAAE;AADE,KAAd;AAGH;;AAEDY,EAAAA,MAAM,GAAI;AAAA,UACAZ,MADA,GACW,KAAKD,KADhB,CACAC,MADA;AAER,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAO,MAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,EAEkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFlC,EAGE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,MAAhB;AAAuB,MAAA,IAAI,EAAC,OAA5B;AAAoC,MAAA,EAAE,EAAC,OAAvC;AAA+C,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,UAAjE;AAA6E,MAAA,QAAQ,EAAE,KAAKN,WAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAG4G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH5G,EAKE;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,EAKgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALhC,EAME,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,MAAhB;AAAuB,MAAA,IAAI,EAAC,MAA5B;AAAmC,MAAA,EAAE,EAAC,MAAtC;AAA6C,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWG,SAA/D;AAA0E,MAAA,QAAQ,EAAE,KAAKN,UAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAMwG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANxG,EAOE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPF,EAQE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKJ,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,EASE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKA,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,EASqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATrD,EAWGO,MAAM,CAACa,OAAP,KAAmBC,SAAnB,GAA+Bd,MAAM,CAACa,OAAP,CAAeE,GAAf,CAAmBC,IAAI,IACvD,oBAAC,SAAD;AACA,MAAA,KAAK,EAAEA,IAAI,CAACC,KADZ;AAEA,MAAA,IAAI,EAAED,IAAI,CAACE,IAFX;AAGA,MAAA,IAAI,EAAEF,IAAI,CAACG,IAHX;AAIA,MAAA,MAAM,EAAEH,IAAI,CAACI,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgC,CAA/B,GAK0B,EAhB7B,EAkBIpB,MAAM,CAACqB,QAAP,KAAqBP,SAArB,IAAkCd,MAAM,CAACqB,QAAP,KAAoB,IAAtD,IAA8D,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKvB,aAAL,CAAmBE,MAAM,CAACqB,QAA1B;AAAoC,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBlE,EAmBIrB,MAAM,CAACsB,IAAP,KAAiBR,SAAjB,IAA8Bd,MAAM,CAACsB,IAAP,KAAgB,IAA9C,IAAsD,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAC,aAAKxB,aAAL,CAAmBE,MAAM,CAACsB,IAA1B;AAAgC,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnB1D,CADF;AAuBD;;AA9E+B;;AAA5BhC,S,CACGiC,Y,GAAe;AAClBvB,EAAAA,MAAM,EAAE;AADU,C;AAgFxB,eAAeV,SAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport MovieItem from './MovieItem.js'\nimport { movieByTitleYearApiUrl } from '../api_helper/routes'\nimport * as api from '../api_helper/api'\n\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  background: #2b2e39;\n  margin: 0 auto;\n  width: 80%;\n  max-width: 600px;\n  padding: 14px;\n  border-radius: 14px;\n  margin-top: 14px;\n`\n\nconst Header = styled.h1`\n  color: #fff;\n`\n\nconst TextInput = styled.input`\n  padding: 5px;\n  font-size: .7em;\n  background: #232632;\n  color: #d3d4d6;\n  width: 100%;\n  margin-right: 7px;\n  border: 0px;\n  -webkit-apperance: none;\n`\n\nconst Button = styled.button`\n  background: #232632;\n  color: #00a7fa;\n  width: 31%;\n  height: 32px;\n  font-size: 0.9em;\n  border: 2px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n  justify-content: center;\n  align-items: center;\n  &:hover { background: #555; } \n`\n\nclass MovieList extends Component {\n  static defaultProps = {\n      movies: [],\n  }\n  constructor (props) {\n    super(props)\n    this.clearList = this.clearList.bind(this)\n    this.updateTitle = this.updateTitle.bind(this)\n    this.updateYear = this.updateYear.bind(this)\n    this.getMovies = this.getMovies.bind(this)\n    this.refreshMovies = this.refreshMovies.bind(this)\n\n    this.state = {\n        movies: [],\n        draftTitle: '',\n        draftYear: ''\n    }\n  }\n\n  updateTitle (event) {\n      this.setState({draftTitle: event.target.value})\n  }\n\n  updateYear (event) {\n      this.setState({draftYear: event.target.value})\n  }\n\n  async refreshMovies (url) {\n    this.setState({movies: []})\n    const data = await api.get(url)\n    this.setState({movies: data})\n  }\n\n  async getMovies () {\n    const title = this.state.draftTitle\n    const year = this.state.draftYear\n\n    this.setState({movies: []})\n\n    const data = await api.get(movieByTitleYearApiUrl(title, year))\n    this.setState({\n        movies: data,\n        draftTitle: '',\n        draftYear: '',\n    })\n  }\n\n  clearList () {\n      this.setState({\n          movies: []\n      })\n  }\n\n  render () {\n    const { movies } = this.state\n    return (\n      <Container>\n        <Header>Movie list from omdbapi</Header>\n        <label for=\"title\">Title</label><br></br>\n        <TextInput type='text' name=\"Title\" id=\"title\" value={this.state.draftTitle} onChange={this.updateTitle}/><br></br>\n\n        <label for=\"year\">Year</label><br></br>\n        <TextInput type='text' name=\"Year\" id=\"year\" value={this.state.draftYear} onChange={this.updateYear}/><br></br>\n        <Button onClick={this.getMovies}>request movies</Button>\n        <Button onClick={this.clearList}>Clear list</Button>\n        <Button onClick={this.clearList}>Favorites</Button><br></br>\n\n        {movies.results !== undefined ? movies.results.map(item =>\n        <MovieItem\n        title={item.Title}\n        type={item.Type}\n        year={item.Year}\n        imdbID={item.imdbID} />) : ''}\n\n        { movies.previous !==  undefined && movies.previous !== null && <Button onClick={() => {this.refreshMovies(movies.previous)}}>Previous</Button>}\n        { movies.next !==  undefined && movies.next !== null && <Button onClick={() => {this.refreshMovies(movies.next)}}>Next</Button>}\n      </Container>\n    )\n  }\n}\n\nexport default MovieList\n"]},"metadata":{},"sourceType":"module"}