{"ast":null,"code":"var _jsxFileName = \"/Users/rafalskrzydelski/development/react/movies/src/components/LogoutUser.js\";\nimport React, { Component } from 'react';\nimport MovieItem from './MovieItem.js';\nimport { movieByTitleYearApiUrl, favMovie } from '../api_helper/routes';\nimport * as api from '../api_helper/api';\nimport styled from 'styled-components';\nconst Container = styled.div`\n  background: #2b2e39;\n  margin: 0 auto;\n  width: 80%;\n  max-width: 600px;\n  padding: 14px;\n  border-radius: 14px;\n  margin-top: 14px;\n`;\nconst Header = styled.h1`\n  color: #fff;\n`;\nconst TextInput = styled.input`\n  padding: 5px;\n  font-size: .7em;\n  background: #232632;\n  color: #d3d4d6;\n  width: 100%;\n  margin-right: 7px;\n  border: 0px;\n  -webkit-apperance: none;\n`;\nconst Button = styled.button`\n  background: #232632;\n  color: #00a7fa;\n  width: 30%;\n  height: 32px;\n  font-size: 0.9em;\n  border: 2px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n  margin-left: 10px;\n  justify-content: center;\n  align-items: center;\n  &:hover { background: #555; } \n`;\n\nclass LogoutUser extends Component {\n  constructor(props) {\n    super(props);\n    this.clearList = this.clearList.bind(this);\n  }\n\n  render() {\n    const movies = this.state.movies;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Movie list from omdbapi\"), React.createElement(\"label\", {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      type: \"text\",\n      name: \"Title\",\n      id: \"title\",\n      value: this.state.draftTitle,\n      onChange: this.updateTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Year\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(TextInput, {\n      type: \"text\",\n      name: \"Year\",\n      id: \"year\",\n      value: this.state.draftYear,\n      onChange: this.updateYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.getMovies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"request movies\"), React.createElement(Button, {\n      onClick: this.clearList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Clear list\"), React.createElement(Button, {\n      onClick: this.clearList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Favorites\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), movies.results !== undefined ? movies.results.map(item => React.createElement(MovieItem, {\n      title: item.Title,\n      type: item.Type,\n      year: item.Year,\n      imdbID: item.imdbID,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })) : '');\n  }\n\n}\n\nexport default MovieList;","map":{"version":3,"sources":["/Users/rafalskrzydelski/development/react/movies/src/components/LogoutUser.js"],"names":["React","Component","MovieItem","movieByTitleYearApiUrl","favMovie","api","styled","Container","div","Header","h1","TextInput","input","Button","button","LogoutUser","constructor","props","clearList","bind","render","movies","state","draftTitle","updateTitle","draftYear","updateYear","getMovies","results","undefined","map","item","Title","Type","Year","imdbID","MovieList"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nimport MovieItem from './MovieItem.js'\nimport { movieByTitleYearApiUrl, favMovie } from '../api_helper/routes'\nimport * as api from '../api_helper/api'\n\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  background: #2b2e39;\n  margin: 0 auto;\n  width: 80%;\n  max-width: 600px;\n  padding: 14px;\n  border-radius: 14px;\n  margin-top: 14px;\n`\n\nconst Header = styled.h1`\n  color: #fff;\n`\n\nconst TextInput = styled.input`\n  padding: 5px;\n  font-size: .7em;\n  background: #232632;\n  color: #d3d4d6;\n  width: 100%;\n  margin-right: 7px;\n  border: 0px;\n  -webkit-apperance: none;\n`\n\nconst Button = styled.button`\n  background: #232632;\n  color: #00a7fa;\n  width: 30%;\n  height: 32px;\n  font-size: 0.9em;\n  border: 2px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-right: 10px;\n  margin-left: 10px;\n  justify-content: center;\n  align-items: center;\n  &:hover { background: #555; } \n`\n\nclass LogoutUser extends Component {\n\n  constructor (props) {\n    super(props)\n    this.clearList = this.clearList.bind(this)\n  }\n\n  render () {\n    const { movies } = this.state\n    return (\n      <div>\n        <Header>Movie list from omdbapi</Header>\n        <label for=\"title\">Title</label><br></br>\n        <TextInput type='text' name=\"Title\" id=\"title\" value={this.state.draftTitle} onChange={this.updateTitle}/><br></br>\n\n        <label for=\"year\">Year</label><br></br>\n        <TextInput type='text' name=\"Year\" id=\"year\" value={this.state.draftYear} onChange={this.updateYear}/><br></br>\n        <Button onClick={this.getMovies}>request movies</Button>\n        <Button onClick={this.clearList}>Clear list</Button>\n        <Button onClick={this.clearList}>Favorites</Button><br></br>\n\n        {movies.results !== undefined ? movies.results.map(item =>\n        <MovieItem\n        title={item.Title}\n        type={item.Type}\n        year={item.Year}\n        imdbID={item.imdbID}/>) : ''\n        }\n      </div>\n    )\n  }\n}\n\nexport default MovieList\n"]},"metadata":{},"sourceType":"module"}